name: Cloud Run Deploy
on:
  workflow_dispatch:
    inputs:
      tag:
        description: The Docker image tag to deploy
        required: false
        default: latest
      service:
        description: The service to use in Cloud Run (will be created if not exists)
        required: false
        default: rroll

env:
  GOOGLE_REGION: europe-west1

jobs:
  release_grun:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    steps:
      - name: Setup vars
        id: vars
        run: |
          echo "name=service::${{ github.event.inputs.service }}" >> $GITHUB_OUTPUT
          echo "name=tag::${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker Image  # TODO
        id: pull
        run: |
          image=ghcr.io/${{ github.repository }}

          docker pull $image:${{ steps.vars.outputs.tag }}
          echo "name=img::$image" >> $GITHUB_OUTPUT
      
      - name: Push Docker Image 
        id: push
        run: |
          tag=${{ steps.vars.outputs.tag }}
          image=gcr.io/${{ secrets.GOOGLE_PROJECT }}/${{ steps.vars.outputs.service }}
          
          docker tag ${{ steps.pull.outputs.img }} $image:$tag
          docker push $image:$tag

          echo "name=img::$image:$tag" >> $GITHUB_OUTPUT

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ steps.vars.outputs.service }}
          image: ${{ steps.push.outputs.img }}
          region: ${{ env.GOOGLE_REGION }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
