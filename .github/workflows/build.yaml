name: Lint and Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '*'
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - version.txt
jobs:
  lint:
    runs-on: ubuntu-latest
    if: >- 
      github.event_name == 'pull_request' ||
      github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root # no root doesn't install the root package

      - name: Check Style
        run: |
          poetry run black --line-length 100 --diff --check rickroll

      - name: Lint (ruff)
        run: |
          poetry run ruff rickroll

      - name: Run Tests
        run: |
          poetry run pytest tests


  build:
    if: ${{ !startsWith(github.event.head_commit.message, 'docs') }} # skip on documentation
    uses: ./.github/workflows/reusable_docker-build-and-push.yaml
    needs: [lint]
    secrets: inherit # pass all secrets to the called workflow
    with:
      # publish only on push to main or develop (releases are handled in another workflow)
      publish: >- 
        ${{ github.event_name == 'push' && 
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') }}
      publish_dockerhub: >-
        ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}